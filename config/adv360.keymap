
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>



/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

/* use helper macros to define left and right hand keys */
#include "zmk-helpers/key-labels/36.h"                                      // key-position labels
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        require-prior-idle-ms = <125>;
        bindings = <&kp>, <&kp>;
    };

    /* left-hand HRMs */
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/* right-hand HRMs */
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
  &none      &none           &none           &none        &none      &none               &tog 2                                                                       &tog 3       &none        &none            &none            &none           &none   &none
  &none      &kp Q           &kp W           &kp E        &kp R      &kp T                &none                                                                        &none       &kp Y        &kp U            &kp I            &kp O           &kp P   &none
  &none  &hml ESC A  &hml LEFT_WIN S  &hml LEFT_ALT D  &hml LCTRL F  &hml TAB G                &none                 &none   &none                   &none   &none          &none  &hmr CAPS H  &hmr RCTRL J  &hmr RIGHT_ALT K  &hmr RIGHT_WIN L  &hmr ENTER SEMI   &none
  &none      &kp Z           &kp X           &kp C        &kp V      &kp B                                              &none                   &none                              &kp N        &kp M        &kp COMMA          &kp DOT       &kp SLASH   &none
  &none      &none           &none           &none        &none                       &kp SPACE  &mt LEFT_SHIFT ENTER   &none                   &mo 4   &mo 1  &kp BACKSPACE                    &none            &none            &none           &none   &none
            >;
        };

        layer_SYM {
            bindings = <
  &none             &none              &none         &none         &none          &none              &none                                                               &none         &none          &none         &none                 &none                  &none   &none
  &none          &kp EXCL             &kp AT      &kp HASH    &kp DOLLAR      &kp PRCNT              &none                                                               &none     &kp CARET  &kp AMPERSAND      &kp STAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &none
  &none      &kp NUMBER_1       &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4   &kp NUMBER_5              &none  &sk LEFT_WIN     &sk RSHFT                   &none   &none   &none  &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8          &kp NUMBER_9           &kp NUMBER_0   &none
  &none  &kp LEFT_BRACKET  &kp RIGHT_BRACKET      &kp PLUS     &kp MINUS  &kp BACKSLASH                                   &sk LEFT_ALT                   &none                      &kp PIPE      &kp UNDER     &kp EQUAL        &kp LEFT_BRACE        &kp RIGHT_BRACE   &none
  &none             &none              &none         &none         &none                           &kp ESC       &kp TAB     &sk LCTRL                   &none   &none   &none                        &none         &none                 &none                  &none   &none
            >;
        };

        layer_GAME {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2          &kp N3           &kp N4  &kp N5               &trans                                                              &none  &kp N6        &kp N7          &kp N8            &kp N9             &kp N0      &kp MINUS
   &kp TAB      &kp Q     &kp W           &kp E            &kp R   &kp T                &none                                                              &none   &kp Y         &kp U           &kp I             &kp O              &kp P  &kp BACKSLASH
   &kp ESC      &kp A     &kp S           &kp D            &kp F   &kp G                &none  &kp LEFT_GUI  &kp LALT                   &none    &none     &none   &kp H         &kp J           &kp K             &kp L           &kp SEMI       &kp APOS
 &kp LSHFT      &kp Z     &kp X           &kp C            &kp V   &kp B                                        &none                   &none                      &kp N         &kp M       &kp COMMA           &kp DOT          &kp SLASH      &kp RSHFT
 &kp LCTRL  &kp TILDE  &kp CAPS  &kp LEFT_ARROW  &kp RIGHT_ARROW                    &kp SPACE     &kp ENTER     &none                   &none  &kp DEL  &kp BSPC          &kp UP_ARROW  &kp DOWN_ARROW  &kp LEFT_BRACKET  &kp RIGHT_BRACKET      &kp RCTRL
            >;
        };

        layer_MOD {
            bindings = <
  &none         &none         &none         &none         &none         &none                  &none                                                       &trans   &none      &none       &none       &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                  &bootloader   &none      &none  &bl BL_INC       &none   &none   &none
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none   &none   &none                   &none   &none        &none   &none  &bl BL_ON  &bl BL_DEC  &bl BL_OFF   &none   &none
  &none         &none         &none         &none         &none         &none                                  &none                   &none                        &none      &none       &none       &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                   &none   &none        &none              &none       &none       &none   &none   &none
            >;
        };

        layer_NAV {
            bindings = <
  &none   &none   &none   &none   &none   &none            &none                                                   &none     &none     &none   &none      &none   &none   &none
  &none   &none   &none   &none   &none   &none            &none                                                   &none     &none     &none   &none      &none   &none   &none
  &none   &none   &none   &none   &none   &none            &none   &none   &none                   &none   &none   &none  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT   &none   &none
  &none   &none   &none   &none   &none   &none                            &none                   &none                     &none     &none   &none      &none   &none   &none
  &none   &none   &none   &none   &none                    &none   &none   &none                   &none   &none   &none               &none   &none      &none   &none   &none
            >;
        };

    };
};
